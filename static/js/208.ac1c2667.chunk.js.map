{"version":3,"file":"static/js/208.ac1c2667.chunk.js","mappings":"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","sources":["Api.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\n// Список самых популярых фильмов на сегодня\nexport const fetchMoviesTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// Поиск кинофильма по ключевому слову\nexport const fetchSearchMovies = async (query) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data;\n};\n\n// Запрос полной информации о фильме\nexport const fetchMoviesDetails = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// Запрос информации о актёрском составе\nexport const fetchMovieCredits = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}//credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// Запрос обзоров\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}//reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n","import styled from 'styled-components';\n\nexport const Wrraper = styled.div`\n  position: relative;\n  border-radius: 5px;\n`;\n\nexport const Container = styled.div`\nheight: auto;\nwidth: 100%;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: top;\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1169px) {\n  flex-basis: calc(100% / 3 - 20px);\n}\n\n  @media screen and (min-width: 1170px) {\n  flex-basis: calc(100% / 4 - 20px);\n}\n`;\n\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  font-weight: 700;\n  color: rgb(0, 0, 0);\n  font-size: 22px;\n  line-height: 1.18;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n  color: rgb(255, 69, 0);\n}\n  `;\n\nexport const Paragraph = styled.p`\n  position: absolute;\n  top: 5px;\n  right: 15px;\n  padding: 5px;\n  border-radius: 5px;\n  font-size: 22px;\n\n  color: rgb(139, 0, 0);\n  background-color: rgb(0, 255, 255);\n`;\n","// import PropTypes from 'prop-types';\n\nimport { Img, Wrraper, Container, Title, Paragraph } from \"./MovieInfo.styled\";\n\n const MovieInfo = ({ title, vote_average, poster_path }) => {\n\n\n  const posterUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n\n  return (\n    <Wrraper>\n        <Container>\n        <Img\n        src={posterUrl}\n        alt={title}\n        />\n       </Container>\n         <Title>{title}</Title>\n         <Paragraph>{Math.round(vote_average * 10)}%</Paragraph>\n    </Wrraper>\n  );\n};\n\nexport default MovieInfo;\n\n// MovieInfo.propTypes = {\n//   title: PropTypes.string,\n//   poster_path: PropTypes.string,\n//   vote_average: PropTypes.number,\n// };\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-wrap: wrap;\ngap: 20px;\nlist-style: none;\n`;\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: top;\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  font-weight: 700;\n  color: rgb(0, 0, 0);\n  font-size: 22px;\n  line-height: 1.18;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n  color: rgb(255, 69, 0);\n}\n  `;\n\nexport const Paragraph = styled.p`\nposition: absolute;\ntop: 5px;\nright: 15px;\npadding: 5px;\nborder-radius: 5px;\nfont-size: 22px;\n\ncolor: rgb(139, 0, 0);\nbackground-color: rgb(0, 255, 255);\n`;\n","// import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { List, Item } from './MoviesList.styled';\n\n\n  const MoviesList = ({movies}) => {\n\n  const location = useLocation();\n\n\n  return (\n    <>\n      <List>\n      {movies.map(({id, title, vote_average, poster_path}) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={ {from: location } }>\n            <MovieInfo\n             title={title}\n             vote_average={vote_average}\n             poster_path={poster_path}\n            />\n          </Link>\n        </Item>\n          ))}\n      </List>\n      </>\n  );\n}\n\nexport default MoviesList;\n\n// MoviesList.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       vote_average: PropTypes.number.isRequired,\n//       title: PropTypes.string,\n//       poster_path: PropTypes.string,\n//     })\n//   ).isRequired,\n// };\n","import { FcSearch } from \"react-icons/fc\";\n\nimport styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 40px;\n  box-shadow: 0px 15px 10px -15px #111;\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 50px;\n  border: none;\n  border-radius: 10px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n  &:focus {\n      color: #212529;\n      border-color: #191970;\n      outline: none;\n      box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n    }\n`;\nexport const Input = styled.input`\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  display: block;\n      width: 100%;\n      padding: 10px 20px;\n      font-family: inherit;\n      font-size: 20px;\n      font-weight: 500;\n      line-height: 1.5;\n      background-color: #fff;\n      border: 1px solid #bdbdbd;\n      border-radius: 10px;\n      border: none;\n      border-bottom: 2px solid rgb(236, 236, 236);\n      border-right: 2px solid rgb(236, 236, 236);\n\n      transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &::placeholder {\n  font: inherit;\n  font-size: 20px;\n}\n\n&:focus {\n      color: #212529;\n      background-color: #fff;\n      border-color: #191970;\n      outline: 0;\n      box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n    }\n`;\n\n\n\n\nexport const SearchIcon = styled(FcSearch)`\n\n`;\n","import PropTypes from 'prop-types';\n// import { toast } from 'react-hot-toast';\n\nimport { Form, Button, Input, SearchIcon } from \"./SearchMovie.styled\";\n\n\n  const SearchMovie = ({ onSubmit }) => {\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { value } = event.target.name;\n    onSubmit(value);\n\n    // if (!value.trim()) {\n    //   toast.info('Please write your request', {\n    //     autoClose: 2000,\n    //   });\n    //   return;\n    // }\n  };\n\n  return (\n  <Form onSubmit={handleSubmit}>\n    <Button type=\"submit\">\n      <span><SearchIcon /></span>\n    </Button>\n\n    <Input\n      type=\"text\"\n      name=\"name\"\n      autocomplete=\"off\"\n      placeholder=\"Search images and photos\"\n    />\n  </Form>\n   )\n};\n\nexport default SearchMovie;\n\nSearchMovie.propType = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// import {toast} from 'react-hot-toast';\nimport { ThreeCircles } from 'react-loader-spinner';\n\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from \"Api\";\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\n\n\n  const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n   useEffect(() => {\n    async function fetchSearchMoviesEffect() {\n      if (query === '') return;\n\n      try {\n          setIsLoading(true);\n          const data = await fetchSearchMovies(query);\n           setMovies(data.results);\n          //  console.log('Movies', data.results);\n\n       } catch (error) {\n        setError('Something went wrong:(');\n      } finally {\n        setIsLoading(false);\n      }\n     }\n     fetchSearchMoviesEffect()\n }, [query])\n\n\n const onSearchParams = searchMovie => {\n  setSearchParams(searchMovie !== '' ? { query: searchMovie } : {})\n  // if (!searchMovie) {\n  //   toast.info('Search results did not match any movies! Enter a different name.');\n  //  }\n};\n\n  return (\n    <main>\n    {isLoading && (\n      <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"rgb(255, 69, 0)\"\n      wrapperStyle={{ display: 'flex', justifyContent:  'center' }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n      />\n    )}\n    {!isLoading && <SearchMovie onSubmit={onSearchParams} />}\n      {!isLoading && query !== null && <MoviesList movies={movies} />}\n      {error && <h2>{error}</h2>}\n     </main>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchMoviesTrending","axios","response","data","fetchSearchMovies","query","fetchMoviesDetails","id","fetchMovieCredits","fetchMovieReviews","Wrraper","styled","Container","Img","Title","Paragraph","title","vote_average","poster_path","posterUrl","src","alt","Math","round","List","Item","movies","location","useLocation","map","to","state","from","Form","Button","Input","SearchIcon","FcSearch","SearchMovie","onSubmit","event","preventDefault","value","target","name","type","autocomplete","placeholder","propType","PropTypes","useState","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","results","fetchSearchMoviesEffect","height","width","color","wrapperStyle","display","justifyContent","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","searchMovie","MoviesList"],"sourceRoot":""}