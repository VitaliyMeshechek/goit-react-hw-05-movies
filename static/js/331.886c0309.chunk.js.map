{"version":3,"file":"static/js/331.886c0309.chunk.js","mappings":"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","sources":["Api.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","components/AdditionalInformation/AdditionalInformation.styled.js","components/AdditionalInformation/AdditionalInformation.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\n// Список самых популярых фильмов на сегодня\nexport const fetchMoviesTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// Поиск кинофильма по ключевому слову\nexport const fetchSearchMovies = async (query) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data;\n};\n\n// Запрос полной информации о фильме\nexport const fetchMoviesDetails = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// Запрос информации о актёрском составе\nexport const fetchMovieCredits = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}//credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// Запрос обзоров\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}//reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n","import styled from 'styled-components';\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\n\nexport const ContainerWrraper = styled.div`\ndisplay: flex;\n  margin-bottom: 20px;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 0;\n  margin-right: 20px;\n}`;\n\nexport const Img = styled.img`\n  height: auto;\n  border-radius: 5px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 300px;\n  }`;\n\nexport const TitleMain = styled.h1`\npadding-left: 10px;\nfont-weight: 700;\ncolor: rgb(0, 0, 0);\nfont-size: 34px;\nline-height: 1.18;\ntransition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\ncolor: rgb(255, 69, 0);\n}`;\n\n  export const Title = styled.h2`\n  padding-left: 10px;\n  font-weight: 700;\n  color: rgb(0, 0, 0);\n  font-size: 22px;\n  line-height: 1.18;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n  color: rgb(255, 69, 0);\n}`;\n\nexport const Paragraph = styled.p`\n  padding-left: 10px;\n  font-weight: 500;\n  color: rgb(0, 0, 0);\n  font-size: 18px;\n  line-height: 1.14;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n  color: rgb(255, 69, 0);\n}\n`;\n\nexport const Text = styled.p`\n  padding-left: 10px;\n  font-weight: 500;\n  color: rgb(50, 205, 50);\n  font-size: 18px;\n  line-height: 1.14;\n  margin-left: 0;\n`;\n\nexport const Span = styled.span`\n  padding-left: 10px;\n  font-weight: 500;\n  color: rgb(50, 205, 50);\n  font-size: 18px;\n  line-height: 1.14;\n\n`;\n\nexport const IconArrowLeft = styled(FaArrowCircleLeft)\n`margin-right: 8px;\ntransition: fill 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover,\n focus {\n  fill: rgb(255, 69, 0);\n}`;\n\nexport const IconSpan = styled.span\n`display: flex;\njustify-content: start;\nalign-items: center;\nmargin-bottom: 10px;\nfont-weight: 500;\nfont-size: 18px;\nline-height: 1.14;\ntransition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover,\n focus {\n  color: rgb(255, 69, 0);\n}`;\n\n\nexport const ListGenres = styled.ul`\ndisplay: flex;\njustify-content: start;\nflex-direction: column;\npadding-left: 10px;\n\nlist-style: none;\n`;\n\nexport const ItemGenres = styled.li`\nmargin-left: 0;\nfont-weight: 500;\n  color: rgb(50, 205, 50);\n  font-size: 18px;\n  line-height: 1.14;\n  margin-left: 0;\n&:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  &::before {\n    content: '▶';\n\n    margin-right: 10px;\n    }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport { ContainerWrraper, Img, TitleMain, Title, Paragraph, Text, Span, IconArrowLeft, IconSpan, ListGenres, ItemGenres} from \"./MovieCard.styled\";\n\n  const MovieCard = ({ movie }) => {\n  const { title, genres, release_date, overview, vote_average, poster_path } = movie;\n\n  const vote = Math.round(vote_average * 10);\n  const posterUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n\n  return (\n    <main>\n      <Link to={backLinkHref}><IconSpan><IconArrowLeft/>Go back</IconSpan></Link>\n      <ContainerWrraper>\n        <Img src={posterUrl} alt={title} />\n\n        <div>\n          <TitleMain>{title}</TitleMain>\n          <Title>Release: <Span>{release_date}</Span></Title>\n          <Paragraph>User score: <Span>{vote}%</Span></Paragraph>\n          <Title>Overview</Title>\n          <Text>{overview}</Text>\n          <Title>Genres</Title>\n          {genres && (\n          <ListGenres>\n            {genres.map(({ id, name }) => (\n              <ItemGenres key={id}>\n                <span>{name}</span>\n              </ItemGenres>\n            ))}\n          </ListGenres>\n        )}\n\n      </div>\n      </ContainerWrraper>\n    </main>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      }),\n    ),\n  }),\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\ntext-align: center;\n`;\n\nexport const Title = styled.h1`\nfont-weight: 700;\ncolor: rgb(0, 0, 0);\nfont-size: 34px;\nline-height: 1.18;\ntransition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\ncolor: rgb(255, 69, 0);\n}`;\n\nexport const List = styled.ul`\nlist-style: none;\ndisplay: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n\n`;\n\nexport const StyledLink = styled(NavLink)`\n\n  font-weight: 700;\n  color: rgb(0, 0, 0);\n  font-size: 22px;\n  line-height: 1.18;\n  text-decoration: none;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n  color: rgb(255, 69, 0);\n}\n`;\n","import { useLocation, Outlet  } from 'react-router-dom';\nimport { Container, Title, List, StyledLink } from './AdditionalInformation.styled';\n\nconst AdditionalInformation = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <Container>\n      <Title>Additional information</Title>\n      <List>\n        <li>\n          <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\" state={{ from: backLinkHref }} >\n            Reviews\n          </StyledLink>\n        </li>\n      </List>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default AdditionalInformation;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'Api';\nimport { useState, useEffect } from 'react';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport AdditionalInformation from 'components/AdditionalInformation/AdditionalInformation';\n\n\n  const MovieDetails = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {id} = useParams();\n\n   useEffect(() => {\n   async function fetchMoovMoviesEffect() {\n    setIsLoading(true);\n\n      try {\n        const data = await fetchMoviesDetails(id);\n\n         setMovies(data);\n        //  console.log('MovieDetails', data);\n        } catch (error) {\n          setError('Something went wrong:(');\n        } finally {\n          setIsLoading(false);\n        }\n     }\n    fetchMoovMoviesEffect()\n }, [id])\n\n  return (\n    <>\n    {isLoading && (\n      <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"rgb(255, 69, 0)\"\n      wrapperStyle={{ display: 'flex', justifyContent:  'center' }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n      />\n    )}\n    {!isLoading && movies && !error && <MovieCard movie={movies} />}\n    {!isLoading && movies && <AdditionalInformation/>}\n    {error && <h2>{error}</h2>}\n    </>\n  )\n};\n\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchMoviesTrending","axios","response","data","fetchSearchMovies","query","fetchMoviesDetails","id","fetchMovieCredits","fetchMovieReviews","ContainerWrraper","styled","Img","TitleMain","Title","Paragraph","Text","Span","IconArrowLeft","FaArrowCircleLeft","IconSpan","ListGenres","ItemGenres","movie","title","genres","release_date","overview","vote_average","poster_path","vote","Math","round","posterUrl","backLinkHref","useLocation","state","from","to","src","alt","map","name","Container","List","StyledLink","NavLink","useState","movies","setMovies","error","setError","isLoading","setIsLoading","useParams","useEffect","fetchMoovMoviesEffect","height","width","color","wrapperStyle","display","justifyContent","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor"],"sourceRoot":""}